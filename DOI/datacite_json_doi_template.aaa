
XML_FILE_INFO=$1

DIRECTORY_JSON=$2

URL_CHECK=$3

if [ -d $XML_FILE_INFO ]; then

   XML_FILE_NAME_LIST=`find $XML_FILE_INFO | sort | grep '\.xml'`$

else

   FILE_NAME_SUFFIX_UPPER=`echo $XML_FILE_INFO | awk 'BEGIN { FS="." } ; { print $NF }' | tr 'a-z' 'A-Z'`

   case $FILE_NAME_SUFFIX_UPPER in

     TXT ) XML_FILE_NAME_LIST=`cat $XML_FILE_INFO`;;

     XML ) XML_FILE_NAME_LIST=$XML_FILE_INFO;;

     *) XML_FILE_NAME_LIST='';;

   esac

fi

if [ $XML_FILE_NAME ]; then

   echo 'WARNING: No XML Files found'

else

   DATE=`date "+%Y%m%d"`

   for XML_FILE_NAME in $XML_FILE_NAME_LIST

   do

       PROJECT=`echo $XML_FILE_NAME | awk 'BEGIN { FS="/" } ; { print $3 }'`

       PROJECT_LOWER=`echo $PROJECT | tr 'A-Z' 'a-z'`

       PROJECT_UPPER=`echo $PROJECT | tr 'a-z' 'A-Z'`

       if [ ! -d $DIRECTORY_JSON ]; then mkdir -p $DIRECTORY_JSON; fi

       DATACITE_CURL_FILE_NAME=$DIRECTORY_JSON/datacite_curl_put_$PROJECT_LOWER'_'$DATE.com

       touch $DATACITE_CURL_FILE_NAME

       chmod +x $DATACITE_CURL_FILE_NAME

       DIRECTORY_OUTPUT=$DIRECTORY_JSON/JSON/$PROJECT_UPPER

       if [ ! -d $DIRECTORY_OUTPUT ]; then mkdir -p $DIRECTORY_OUTPUT; fi

       SPASE_RESOURCE_ID=`grep '<ResourceID>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sort | sed 's/^spase:\/\///'`

       PRODUCT_KEY_UPPER=`grep '<ProductKey>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sed 's/@.*//' | sort | uniq | tr 'a-z' 'A-Z'`

       if [ ! $PRODUCT_KEY_UPPER ]; then

          if [ $SPASE_RESOURCE_ID == 'NASA/NumericalData/RBSP/A/EMFISIS/HOUSEKEEPING/L2/PT1S' ]; then PRODUCT_KEY_UPPER='RBSP-A_HOUSEKEEPING_EMFISIS-L2'; fi

          if [ $SPASE_RESOURCE_ID == 'NASA/NumericalData/RBSP/B/EMFISIS/HOUSEKEEPING/L2/PT1S' ]; then PRODUCT_KEY_UPPER='RBSP-B_HOUSEKEEPING_EMFISIS-L2'; fi

          if [ $SPASE_RESOURCE_ID == 'NASA/NumericalData/RBSP/A/EMFISIS/WFR/L2/SPECTRAL-MATRIX-BURST/PT1S' ]; then PRODUCT_KEY_UPPER='RBSP-A_WFR-SPECTRAL-MATRIX-BURST_EMFISIS-L2'; fi

       fi

       PRODUCT_KEY_LOWER=`echo $PRODUCT_KEY_UPPER | tr 'A-Z' 'a-z'`

       grep -v '<DOI>[ 	]*</DOI>' $XML_FILE_NAME >& datacite_json_doi_template_$$.xml

       DOI=`grep '<DOI>' datacite_json_doi_template_$$.xml | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sed 's/^https:\/\/doi.org\///' | sort | uniq | tr 'A-Z' 'a-z'`

       rm datacite_json_doi_template_$$.xml

       if [ $DOI ]; then

          DOI_STATUS=OLD

          PREFIX=`echo $DOI | awk 'BEGIN { FS="/" } ; { print $1 }'`

          SUFFIX=`echo $DOI | awk 'BEGIN { FS="/" } ; { print $2 }'`

       else

          DOI_STATUS=NEW

          if [ $DIRECTORY_JSON == 'DATACITE' ]; then PREFIX='10.48322'; fi

          if [ $DIRECTORY_JSON == 'TEST_DATACITE' ]; then PREFIX='10.82168'; fi

       fi

       JSON_FILE_NAME=$DIRECTORY_OUTPUT/datacite_json_doi_template_$PRODUCT_KEY_LOWER.json

       if [ -e $JSON_FILE_NAME ]; then rm $JSON_FILE_NAME; fi

       echo '{' >& $JSON_FILE_NAME

       echo '  "data": {' >> $JSON_FILE_NAME

       echo '    "type": "dois",' >> $JSON_FILE_NAME

       echo '    "attributes": {' >> $JSON_FILE_NAME

       if [ ! $DOI ]; then echo '      "doi": "'$DOI'",'; fi >> $JSON_FILE_NAME

       echo '      "prefix": "'$PREFIX'",' >> $JSON_FILE_NAME

       if [ ! $DOI ]; then echo '      "suffix": "'$SUFFIX'",'; fi >> $JSON_FILE_NAME

       echo '      "url": "https://hpde.io/'$SPASE_RESOURCE_ID'.html",' >> $JSON_FILE_NAME

       echo '      "types": {' >> $JSON_FILE_NAME

       echo '        "ris": "DATA",' >> $JSON_FILE_NAME

       echo '        "bibtex": "misc",' >> $JSON_FILE_NAME

       echo '        "citeproc": "dataset",' >> $JSON_FILE_NAME

       echo '        "schemaOrg": "Dataset",' >> $JSON_FILE_NAME

       echo '        "resourceTypeGeneral": "Dataset"' >> $JSON_FILE_NAME

       echo '      },' >> $JSON_FILE_NAME

       echo '      "creators": [' >> $JSON_FILE_NAME

       datacite_json_doi_info_all.com $SPASE_RESOURCE_ID

       SPASE_PERSON_NAME_LIST=`grep '	'$SPASE_RESOURCE_ID'	' person_mission_nasa_all.tab | grep -v '	MetadataContact'$ | awk 'BEGIN { FS="	" } ; { print $3 }' | uniq`

       SPASE_PERSON_NAME_LAST=`grep '	'$SPASE_RESOURCE_ID'	' person_mission_nasa_all.tab | grep -v '	MetadataContact'$ | awk 'BEGIN { FS="	" } ; { print $3 }' | tail -1`

       if [ -e person_mission_nasa_all.tab ]; then rm person_mission_nasa_all.tab; fi

       for SPASE_PERSON_NAME in $SPASE_PERSON_NAME_LIST

       do

           datacite_doi_name_list.com $SPASE_PERSON_NAME >& datacite_doi_name_list.tab

           SPASE_PERSON_NAME_MATCH=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $1 }'`

           if [ $SPASE_PERSON_NAME_MATCH ]; then

              FULL_NAME=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $2 }'`

              FIRST_NAME=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $3 }'`

              AUTHORS_GIVEN_NAME=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $4 }'`

              GIVEN_NAME=`echo $AUTHORS_GIVEN_NAME | sed 's/,//'`

              FAMILY_NAME=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $5 }'`

              INITIAL_NAME=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $6 }'`

              AFFILIATION_NAME=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $7 }'`

              AFFILIATION_ROR=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $8 }'`

              MISSION_ACRONYM=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $9 }'`

              NAME_PATTERN=`grep ^$SPASE_PERSON_NAME'	' datacite_doi_name_list.tab | awk 'BEGIN { FS="	" } ; { print $10 }'`

           else

              GIVEN_NAME=GIVEN_NAME

              FAMILY_NAME=FAMILY_NAME

           fi

           if [ -e datacite_doi_name_list.tab ]; then rm datacite_doi_name_list.tab; fi

           echo '        {' >> $JSON_FILE_NAME

           echo '          "name": "'$FAMILY_NAME', '"$GIVEN_NAME"'",' >> $JSON_FILE_NAME

           echo '          "nameType": "Personal",' >> $JSON_FILE_NAME

           echo '          "givenName": "'"$GIVEN_NAME"'",' >> $JSON_FILE_NAME

           echo '          "familyName": "'$FAMILY_NAME'",' >> $JSON_FILE_NAME

           echo '          "affiliation": [' >> $JSON_FILE_NAME

           echo '            {' >> $JSON_FILE_NAME

           if [ $AFFILIATION_ROR ]; then

              echo '              "name": "'"$AFFILIATION_NAME"'",' >> $JSON_FILE_NAME

              echo '              "schemeUri": "https://ror.org",' >> $JSON_FILE_NAME

              echo '              "affiliationIdentifier": "https://ror.org/'$AFFILIATION_ROR'",' >> $JSON_FILE_NAME

              echo '              "affiliationIdentifierScheme": "ROR"' >> $JSON_FILE_NAME

           else

              echo '              "name": "'"$AFFILIATION_NAME"'"' >> $JSON_FILE_NAME

           fi

           echo '            }' >> $JSON_FILE_NAME

           echo '          ],' >> $JSON_FILE_NAME

           echo '          "nameIdentifiers": []' >> $JSON_FILE_NAME

           if [ $SPASE_PERSON_NAME != $SPASE_PERSON_NAME_LAST ]; then

              echo '        },' >> $JSON_FILE_NAME

           else

              echo '        }' >> $JSON_FILE_NAME

           fi

       done

       echo '      ],' >> $JSON_FILE_NAME

       TITLE=`grep -r '<ResourceName>' $XML_FILE_NAME | sort | awk 'BEGIN { FS="[<>]" } ; { print $3 }'`

       echo '      "titles": [' >> $JSON_FILE_NAME

       echo '        {' >> $JSON_FILE_NAME

       echo '          "lang": "en",' >> $JSON_FILE_NAME

       echo '          "title": "'"$TITLE"'",' >> $JSON_FILE_NAME

       echo '          "titleType": null' >> $JSON_FILE_NAME

       echo '        }' >> $JSON_FILE_NAME

       echo '      ],' >> $JSON_FILE_NAME

       PUBLISHER='NASA Space Physics Data Facility'

       echo '      "publisher": "'"$PUBLISHER"'",' >> $JSON_FILE_NAME

       PROCESSING_LEVEL=`grep '<ProcessingLevel>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }'`

       echo '      "subjects": [' >> $JSON_FILE_NAME

       if [ $PROCESSING_LEVEL ]; then

          echo '        {' >> $JSON_FILE_NAME

          echo '          "subject": "'$PROCESSING_LEVEL'"' >> $JSON_FILE_NAME

          echo '        },' >> $JSON_FILE_NAME

       fi

       MEASUREMENT_TYPE_LIST=`grep '<MeasurementType>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sort | uniq`

       MEASUREMENT_TYPE_LAST=`grep '<MeasurementType>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sort | tail -1`

       for MEASUREMENT_TYPE in $MEASUREMENT_TYPE_LIST

       do

           echo '        {' >> $JSON_FILE_NAME

           echo '          "subject": "'$MEASUREMENT_TYPE'"' >> $JSON_FILE_NAME

           if [ $MEASUREMENT_TYPE != $MEASUREMENT_TYPE_LAST ]; then

              echo '        },' >> $JSON_FILE_NAME

           else

              echo '        }' >> $JSON_FILE_NAME

           fi

       done

       echo '      ],' >> $JSON_FILE_NAME

       echo '      "contributors": [],' >> $JSON_FILE_NAME

       echo '      "dates": [],' >> $JSON_FILE_NAME

       PUBLICATION_YEAR=2023

       echo '      "publicationYear": '$PUBLICATION_YEAR',' >> $JSON_FILE_NAME

       echo '      "language": "en",' >> $JSON_FILE_NAME

       echo '      "identifiers": [' >> $JSON_FILE_NAME

       echo '        {' >> $JSON_FILE_NAME

       echo '          "identifier": "spase://'$SPASE_RESOURCE_ID'",' >> $JSON_FILE_NAME

       echo '          "identifierType": "SPASE"' >> $JSON_FILE_NAME

       echo '        }' >> $JSON_FILE_NAME

       echo '      ],' >> $JSON_FILE_NAME

       echo '      "sizes": [],' >> $JSON_FILE_NAME

       FORMAT_LIST=`grep '<Format>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sort | uniq`

       FORMAT_LAST=`grep '<Format>' $XML_FILE_NAME | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sort | tail -1`

       echo '      "formats": [' >> $JSON_FILE_NAME

       for FORMAT in $FORMAT_LIST

       do

           echo '        {' >> $JSON_FILE_NAME

           echo '          "subject": "'$FORMAT'"' >> $JSON_FILE_NAME

           if [ $FORMAT != $FORMAT_LAST ]; then

              echo '        },' >> $JSON_FILE_NAME

           else

              echo '        }' >> $JSON_FILE_NAME

           fi

       done

       echo '      ],' >> $JSON_FILE_NAME

       echo '      "rightsList": [' >> $JSON_FILE_NAME

       echo '        {' >> $JSON_FILE_NAME

       echo '          "rights": "Creative Commons Zero v1.0 Universal",' >> $JSON_FILE_NAME

       echo '          "rightsUri": "https://creativecommons.org/publicdomain/zero/1.0/legalcode",' >> $JSON_FILE_NAME

       echo '          "schemeUri": "https://spdx.org/licenses/",' >> $JSON_FILE_NAME

       echo '          "rightsIdentifier": "cc0-1.0",' >> $JSON_FILE_NAME

       echo '          "rightsIdentifierScheme": "SPDX"' >> $JSON_FILE_NAME

       echo '        }' >> $JSON_FILE_NAME

       echo '      ],' >> $JSON_FILE_NAME

       DESCRIPTION=`grep '<Description>' $XML_FILE_NAME | head -1 | awk 'BEGIN { FS="[<>]" } ; { print $3 }' | sed 's/"/\&quot;/g'`

       echo '      "descriptions": [' >> $JSON_FILE_NAME

       echo '        {' >> $JSON_FILE_NAME

       echo '          "lang": "en",' >> $JSON_FILE_NAME

       echo '          "description": "'"$DESCRIPTION"'",' >> $JSON_FILE_NAME

       echo '          "descriptionType": "Abstract"' >> $JSON_FILE_NAME

       echo '        }' >> $JSON_FILE_NAME

       echo '      ],' >> $JSON_FILE_NAME

       echo '      "geoLocations": [],' >> $JSON_FILE_NAME

       echo '      "fundingReferences": [],' >> $JSON_FILE_NAME

       echo '      "relatedIdentifiers": [],' >> $JSON_FILE_NAME

       echo '      "schemaVersion": "http://datacite.org/schema/kernel-4",' >> $JSON_FILE_NAME

       echo '      "providerId": "nasasmd",' >> $JSON_FILE_NAME

       echo '      "clientId": "heliophy.spdf",' >> $JSON_FILE_NAME

       echo '      "agency": "datacite",' >> $JSON_FILE_NAME

       echo '      "state": "draft"' >> $JSON_FILE_NAME

       echo '    }' >> $JSON_FILE_NAME

       echo '  }' >> $JSON_FILE_NAME

       echo '}' >> $JSON_FILE_NAME

       if [ $PREFIX == '10.48322' ]; then

          URL_TEXT=''

          USER_PASS='aGVsaW9waHkuc3BkZjpUcmFucXVpbGxpdHkkQmFzZSZFYWdsZQ=='

       fi

       if [ $PREFIX == '10.82168' ]; then

          URL_TEXT='test.'

          USER_PASS='dGVzdG9yZy5oZWxpb3BoeTo2eWFyZCRUQUNLMjc='

          USER_PASS='aGVsaW9waHkuc3BkZjpUcmFucXVpbGxpdHkkQmFzZSZFYWdsZQo='

       fi

       if [ $DOI ]; then

          echo 'curl -ksSX --request PUT --url https://api.'$URL_TEXT'datacite.org/dois/'$PREFIX'%2F'$SUFFIX" -H 'Authorization: Bearer {"$USER_PASS"}' --header 'content-type: application/vnd.api+json' -d @"$JSON_FILE_NAME >> $DATACITE_CURL_FILE_NAME

#         echo 'curl -ksSX --request PUT --url https://api.'$URL_TEXT'datacite.org/dois/'$PREFIX'%2F'$SUFFIX" -H 'Authorization: Bearer {"$USER_PASS"}' --header 'content-type: application/vnd.api+json' -d @"$JSON_FILE_NAME >> $DATACITE_CURL_FILE_NAME

#               curl -ksSX --request PUT --url https://api.'$URL_TEXT'datacite.org/dois/'$PREFIX'%2F'$SUFFIX" -H 'Authorization: Bearer {"$USER_PASS"}' --header 'content-type: application/vnd.api+json' -d @"$JSON_FILE_NAME

       else

          echo "curl -ksSX POST -H 'Content-Type: application/vnd.api+json' -u 'heliophy.spdf:Tranquillity\$Base&Eagle' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois" >> $DATACITE_CURL_FILE_NAME

          echo "curl -ksSX POST -H 'Content-Type: application/vnd.api+json' -u 'heliophy.spdf:Tranquillity\$Base&Eagle' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois" >& $DIRECTORY_JSON/datacite_json_doi_template_$$.com

#         echo "curl -ksSX POST -H 'Content-Type: application/vnd.api+json' -H 'Authorization: Bearer {"$USER_PASS"}' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois" >> $DATACITE_CURL_FILE_NAME

#         echo "curl -ksSX POST -H 'Content-Type: application/vnd.api+json' -H 'Authorization: Bearer {"$USER_PASS"}' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois" >& $DIRECTORY_JSON/datacite_json_doi_template_$$.com

#               curl -ksSX POST -H 'Content-Type: application/vnd.api+json' -u 'heliophy.spdf:Tranquillity\$Base&Eagle' -d @$JSON_FILE_NAME https://api.$URL_TEXTdatacite.org/dois


#               curl -ksSX --request PUT -H 'Content-Type: application/vnd.api+json' -u 'heliophy.spdf:Tranquillity$Base&Eagle' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois

#         echo "curl -ksSX --request PUT -H 'Content-Type: application/vnd.api+json'                          -H 'Authorization: Bearer {"$USER_PASS"}' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois" >> $DATACITE_CURL_FILE_NAME

#         echo "curl -ksSX --request PUT -H 'Content-Type: application/vnd.api+json'                          -H 'Authorization: Bearer {"$USER_PASS"}' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois" >& $DIRECTORY_JSON/datacite_json_doi_template_$$.com

#               curl -ksSX --request PUT -H 'Content-Type: application/vnd.api+json'                          -H 'Authorization: Bearer {"$USER_PASS"}' -d @"$JSON_FILE_NAME" https://api."$URL_TEXT"datacite.org/dois

          chmod +x $DIRECTORY_JSON/datacite_json_doi_template_$$.com

          $DIRECTORY_JSON/datacite_json_doi_template_$$.com >& $DIRECTORY_JSON/datacite_json_doi_template_$$.json

          DOI=`awk 'BEGIN { FS="\"" } ; { print $6 }' $DIRECTORY_JSON/datacite_json_doi_template_$$.json | tr 'a-z' 'A-Z'`

          rm $DIRECTORY_JSON/datacite_json_doi_template_$$.com $DIRECTORY_JSON/datacite_json_doi_template_$$.json

       fi

       PREFIX=`echo $DOI | awk 'BEGIN { FS="/" } ; { print $1 }'`

       SUFFIX=`echo $DOI | awk 'BEGIN { FS="/" } ; { print $2 }'`

       SUFFIX_UPPER=`echo $SUFFIX | tr 'a-z' 'A-Z'`

       SUFFIX_LOWER=`echo $SUFFIX | tr 'A-Z' 'a-z'`

       DOI_LOWER=$PREFIX/$SUFFIX_LOWER

       printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\n" $DOI_STATUS $DOI $PREFIX $SUFFIX_LOWER $PRODUCT_KEY_UPPER $SPASE_RESOURCE_ID $JSON_FILE_NAME >> datacite_json_doi_template_all.tab

       spase_editor_update.com "$DOI_LOWER" DOI $DIRECTORY_JSON $SPASE_RESOURCE_ID.xml $URL_CHECK

   done

fi

