import { SaxesParser } from 'saxes';
import { Attr, Node } from 'slimdom';
/**
 * The helper functions to track node positions.
 */
declare type PositionTracker = {
    trackNodePosition<N extends Node>(node: N): PositionTrackedNode<N>;
    trackNodeClosePosition<N extends Node>(node: PositionTrackedNode<N>): PositionTrackedElement<N>;
    updateLastTrackedPosition(): void;
    getCurrentPosition(): Position;
    trackAttributePosition<A extends Attr>(attr: A, endPosition: Position): PositionTrackedAttr<A>;
};
/**
 * One (collapsed) location in code. `offset` is equal to the length of all preceding lines + column.
 */
export declare type Position = {
    offset: number;
    line: number;
    column: number;
};
/**
 * A location in code, possibly spanning text. `start` and `end` are both offsets from the start of
 * the XML source.
 */
export declare type PositionRange = {
    line: number;
    column: number;
    start: number;
    end: number;
};
/**
 * Various properties on nodes that contain the position information.
 */
export declare type PositionTrackedNode<N> = N & {
    position: PositionRange;
};
export declare type PositionTrackedElement<N> = PositionTrackedNode<N> & {
    closePosition: PositionRange;
};
export declare type PositionTrackedAttr<A> = A & {
    position: {
        end: number;
    };
};
/**
 * Create the context needed to track the positions in an XML string at which a Slimdom node was defined. Is based on
 * input from the saxes parser and fixes some unexpected behaviour by it.
 */
export default function createPositionTracker(parser: SaxesParser): PositionTracker;
/**
 * No-op alternative for position tracking, when position tracking is disabled.
 */
export declare const positionTrackerStubs: PositionTracker;
export {};
