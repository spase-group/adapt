"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("fontoxpath"),e=require("slimdom-sax-parser");function n(){return(n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}var r=function(){function t(t,e){this.prefix=t,this.uri=e}return t.fromJson=function(e){return new t(e.prefix,e.uri)},t}();r.QUERY='map {\n\t\t"prefix": @prefix/string(),\n\t\t"uri": @uri/string()\n\t}';var a=function(){function t(t,e,n){this.assertId=e.id,this.isReport=e.isReport,this.context=t,this.message=n}return t.prototype.toJson=function(){return{assertId:this.assertId,isReport:this.isReport,context:this.context.outerHTML,message:this.message}},t}(),s=function(){function e(t,e,n,r){this.id=t,this.test=e,this.message=n,this.isReport=r}var n=e.prototype;return n.createMessageString=function(e,n,r,a){return a.map((function(a){if("string"==typeof a)return a;if("name"===a.$type)return t.evaluateXPathToString("name("+(a.path||"")+")",e,null,n,r);if("value-of"===a.$type)return t.evaluateXPathToString(a.select,e,null,n,r);throw console.log(a),new Error("Unsupported element in <sch:message>")})).join("")},n.validateNode=function(e,n,r){var s=t.evaluateXPathToBoolean(this.test,e,null,n,r);return!this.isReport&&s||this.isReport&&!s?null:new a(e,this,this.createMessageString(e,n,r,this.message))},e.fromJson=function(t){return new e(t.id,t.test,t.message,t.isReport)},e}();s.QUERY="map {\n\t\t'id': if (@id) then string(@id) else (),\n\t\t'test': @test/string(),\n\t\t'message': array { (./text()|./element())/local:json(.) },\n\t\t'isReport': boolean(local-name() = 'report')\n\t}";var i=function(){function e(t,e){this.name=t,this.value=e}return e.reduceVariables=function(e,n,r,a){return n.reduce((function(n,a){var s;return Object.assign(n,((s={})[a.name]=a.value?t.evaluateXPath(a.value,e,null,n,void 0,r):e,s))}),a||{})},e.fromJson=function(t){return new e(t.name,t.value)},e}();i.QUERY="map {\n\t\t'name': @name/string(),\n\t\t'value': @value/string()\n\t}";var o=function(){function t(t,e,n){this.context=t,this.variables=e,this.asserts=n}return t.prototype.validateNode=function(t,e,r){var a=i.reduceVariables(t,this.variables,r,n({},e));return this.asserts.map((function(e){return e.validateNode(t,a,r)})).filter((function(t){return null!==t}))},t.fromJson=function(e){var n=e.variables.map((function(t){return i.fromJson(t)})),r=e.asserts.map((function(t){return s.fromJson(t)}));return new t(e.context,n,r)},t}();o.QUERY="map {\n\t\t'context': @context/string(),\n\t\t'variables': array { ./sch:let/"+i.QUERY+"},\n\t\t'asserts': array{ ./(sch:report|sch:assert)/"+s.QUERY+"}\n\t}";var u=function(){function e(t,e,n){this.id=t,this.rules=e,this.variables=n}return e.prototype.validateDocument=function(e,r,a){var s=this,o=i.reduceVariables(e,this.variables,a,n({},r)),u=this.rules.map((function(n){return t.evaluateXPathToNodes("//("+n.context+")",e,null,o,a)}));return Array.from(e.childNodes).reduce((function t(e,n){var r=u.findIndex((function(t){return t.includes(n)})),i=r>=0?s.rules[r]:null;return i&&e.splice.apply(e,[e.length,0].concat(i.validateNode(n,o,a))),Array.from(n.childNodes).reduce(t,e)}),[])},e.fromJson=function(t){return new e(t.id,t.rules.map((function(t){return o.fromJson(t)})),t.variables.map((function(t){return i.fromJson(t)})))},e}();u.QUERY="map {\n\t\t'id': @id/string(),\n\t\t'rules': array{ ./sch:rule/"+o.QUERY+"},\n\t\t'variables': array { ./sch:let/"+i.QUERY+"}\n\t}";var c=function(){function t(t,e,n){this.id=t,this.active=e,this.variables=n}return t.fromJson=function(e){return new t(e.id,e.active,e.variables.map((function(t){return i.fromJson(t)})))},t}();c.QUERY='map {\n\t\t"id": @id/string(),\n\t\t"active": array { ./sch:active/@pattern/string() },\n\t\t\'variables\': array { ./sch:let/'+i.QUERY+"}\n\t}";var l=function(){function a(t,e,n,r,a,s){this.title=t,this.defaultPhase=e,this.variables=n,this.phases=r,this.patterns=a,this.namespaces=s}var s=a.prototype;return s.validateString=function(t,n){return this.validateDocument(e.sync(t),n)},s.validateDocument=function(t,e){var r=this,a=e||{},s=a.phaseId,o=a.debug;s||(s="#DEFAULT"),"#DEFAULT"===s&&(s=this.defaultPhase||"#ALL");var u={namespaceResolver:this.getNamespaceUriForPrefix.bind(this),debug:o},c=i.reduceVariables(t,this.variables,u,{});if("#ALL"===s)return this.patterns.reduce((function(e,n){return e.concat(n.validateDocument(t,c,u))}),[]);var l=this.phases.find((function(t){return t.id===s})),f=i.reduceVariables(t,(null==l?void 0:l.variables)||[],u,n({},c));return(null==l?void 0:l.active.map((function(t){return r.patterns.find((function(e){return e.id===t}))})).reduce((function(e,n){return e.concat((null==n?void 0:n.validateDocument(t,f,u))||[])}),[]))||[]},s.getNamespaceUriForPrefix=function(t){if(!t)return null;var e=this.namespaces.find((function(e){return e.prefix===t}));if(!e)throw new Error('Namespace prefix "'+t+'" could not be resolved to an URI using <sch:ns>');return e.uri},a.fromJson=function(t){return new a(t.title,t.defaultPhase,t.variables.map((function(t){return i.fromJson(t)})),t.phases.map((function(t){return c.fromJson(t)})),t.patterns.map((function(t){return u.fromJson(t)})),t.namespaces.map((function(t){return r.fromJson(t)})))},a.fromDomToJson=function(e){return t.evaluateXPath(a.QUERY,e,null,{},void 0,{language:t.evaluateXPath.XQUERY_3_1_LANGUAGE})},a.fromDom=function(t){return a.fromJson(a.fromDomToJson(t))},a.fromString=function(t){return a.fromDom(e.sync(t))},a}();l.QUERY="\n\t\tdeclare namespace sch = 'http://purl.oclc.org/dsdl/schematron';\n\n\t\tdeclare function local:json($node as node()) {\n\t\t\tif ($node[self::text()])\n\t\t\t\tthen $node/string()\n\t\t\telse\n\t\t\tmap:merge((\n\t\t\t\tmap:entry('$type', $node/local-name()),\n\t\t\t\tfor $attr in $node/@*\n\t\t\t\t\treturn map:entry($attr/name(), $attr/string())\n\t\t\t))\n\t\t};\n\n\t\tlet $context := /*[1]\n\t\treturn map {\n\t\t\t'title': $context/@title/string(),\n\t\t\t'defaultPhase': $context/@defaultPhase/string(),\n\t\t\t'phases': array { $context/sch:phase/"+c.QUERY+"},\n\t\t\t'patterns': array { $context/sch:pattern/"+u.QUERY+"},\n\t\t\t'variables': array { $context/sch:let/"+i.QUERY+"},\n\t\t\t'namespaces': array { $context/sch:ns/"+r.QUERY+"}\n\t\t}\n\t",Object.defineProperty(exports,"registerCustomXPathFunction",{enumerable:!0,get:function(){return t.registerCustomXPathFunction}}),exports.Schema=l;
//# sourceMappingURL=node-schematron.cjs.production.min.js.map
